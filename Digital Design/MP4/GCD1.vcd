$date
	Mon May 22 08:15:57 2023
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module testfixture $end
$var wire 1 ! result_taken $end
$var wire 1 " result_rdy $end
$var wire 16 # result_data [15:0] $end
$var wire 16 $ operand_B [15:0] $end
$var wire 16 % operand_A [15:0] $end
$var wire 1 & input_available $end
$var wire 1 ' idle $end
$var wire 1 ( B_zero $end
$var wire 1 ) B_sel $end
$var wire 1 * B_en $end
$var wire 3 + A_sel [2:0] $end
$var wire 1 , A_lt_B $end
$var wire 1 - A_en $end
$var reg 1 . clk $end
$var reg 1 / reset_ $end
$scope module C1 $end
$var wire 1 . clk $end
$var wire 1 / reset_ $end
$var wire 1 ! result_taken $end
$var wire 1 & input_available $end
$var wire 1 ( B_zero $end
$var wire 1 , A_lt_B $end
$var reg 1 - A_en $end
$var reg 3 0 A_sel [2:0] $end
$var reg 1 * B_en $end
$var reg 1 ) B_sel $end
$var reg 1 ' idle $end
$var reg 2 1 next_state [1:0] $end
$var reg 1 " result_rdy $end
$var reg 2 2 state [1:0] $end
$upscope $end
$scope module D1 $end
$var wire 1 - A_en $end
$var wire 3 3 A_sel [2:0] $end
$var wire 1 * B_en $end
$var wire 1 ) B_sel $end
$var wire 1 . clk $end
$var wire 16 4 result_data [15:0] $end
$var wire 16 5 sub_out [15:0] $end
$var wire 16 6 operand_B [15:0] $end
$var wire 16 7 operand_A [15:0] $end
$var wire 16 8 negative_sub_out [15:0] $end
$var wire 1 ( B_zero $end
$var wire 1 , A_lt_B $end
$var reg 16 9 A [15:0] $end
$var reg 16 : A_out [15:0] $end
$var reg 16 ; B [15:0] $end
$var reg 16 < B_out [15:0] $end
$upscope $end
$scope module I1 $end
$var wire 1 ' idle $end
$var reg 1 & input_available $end
$var reg 16 = operand_A [15:0] $end
$var reg 16 > operand_B [15:0] $end
$upscope $end
$scope module O1 $end
$var wire 16 ? result_data [15:0] $end
$var wire 1 " result_rdy $end
$var reg 16 @ result [15:0] $end
$var reg 1 ! result_taken $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx @
bx ?
b1111 >
b100100 =
b1111 <
bx ;
b100100 :
bx 9
bx 8
b100100 7
b1111 6
bx 5
bx 4
b0 3
b0 2
b1 1
b0 0
0/
0.
1-
x,
b0 +
1*
0)
x(
1'
1&
b100100 %
b1111 $
bx #
0"
0!
$end
#1000
b1111111111101011 8
1*
0)
1-
b0 +
b0 0
b0 3
b1 1
0,
b10101 5
b100100 #
b100100 4
b100100 ?
b100100 9
0(
b1111 ;
1.
#1500
1/
#2000
0.
#3000
bx <
b10101 :
0'
0*
x)
1-
b10 +
b10 0
b10 3
b1 2
1.
#4000
0.
0&
#5000
b1111111111111010 8
b110 :
b110 5
b10101 #
b10101 4
b10101 ?
b10101 9
1.
#6000
0.
#7000
b110 <
1*
1)
0'
1-
b11 +
b11 0
b11 3
b1001 8
b1001 :
1,
b1111111111110111 5
b110 #
b110 4
b110 ?
b110 9
1.
#8000
0.
#9000
b11 :
bx <
0'
0*
x)
1-
b10 +
b10 0
b10 3
b1111111111111101 8
b1001 #
b1001 4
b1001 ?
b1001 9
0,
b11 5
b110 ;
1.
#10000
0.
#11000
b11 <
1*
1)
0'
1-
b11 +
b11 0
b11 3
b11 8
b11 :
1,
b1111111111111101 5
b11 #
b11 4
b11 ?
b11 9
1.
#12000
0.
#13000
bx <
b0 :
0'
0*
x)
1-
b10 +
b10 0
b10 3
b0 8
0,
b0 5
b11 ;
1.
#14000
0.
#15000
b0 <
1*
1)
0'
1-
b11 +
b11 0
b11 3
b11 8
b11 :
1,
b1111111111111101 5
b0 #
b0 4
b0 ?
b0 9
1.
#16000
0.
#17000
bx :
bx <
b10 1
1'
0*
x)
0-
bx +
bx 0
bx 3
b1111111111111101 8
b11 #
b11 4
b11 ?
b11 9
1(
0,
b11 5
b0 ;
1.
#18000
0.
#19000
b0 1
1!
b11 @
1"
b10 2
1.
#20000
b0 1
0.
1&
b11110 $
b11110 6
b11110 >
b10110100 %
b10110100 7
b10110100 =
#21000
b11110 <
b10110100 :
0!
1*
0)
1-
b0 +
b0 0
b0 3
0"
b1 1
b0 2
1.
#22000
0.
#23000
bx <
b10010110 :
0'
0*
x)
1-
b10 +
b10 0
b10 3
b1111111101101010 8
b1 2
0(
b11110 ;
b10010110 5
b10110100 #
b10110100 4
b10110100 ?
b10110100 9
1.
#24000
0.
0&
#25000
b1111111110001000 8
b1111000 :
b1111000 5
b10010110 #
b10010110 4
b10010110 ?
b10010110 9
1.
#26000
0.
#27000
b1111111110100110 8
b1011010 :
b1011010 5
b1111000 #
b1111000 4
b1111000 ?
b1111000 9
1.
#28000
0.
#29000
b1111111111000100 8
b111100 :
b111100 5
b1011010 #
b1011010 4
b1011010 ?
b1011010 9
1.
#30000
0.
#31000
b1111111111100010 8
b11110 :
b11110 5
b111100 #
b111100 4
b111100 ?
b111100 9
1.
#32000
0.
#33000
b0 8
b0 :
b0 5
b11110 #
b11110 4
b11110 ?
b11110 9
1.
#34000
0.
#35000
b0 <
1*
1)
0'
1-
b11 +
b11 0
b11 3
b11110 8
b11110 :
1,
b1111111111100010 5
b0 #
b0 4
b0 ?
b0 9
1.
#36000
0.
#37000
bx :
bx <
b10 1
1'
0*
x)
0-
bx +
bx 0
bx 3
b1111111111100010 8
b11110 #
b11110 4
b11110 ?
b11110 9
1(
0,
b11110 5
b0 ;
1.
#38000
0.
#39000
b0 1
1!
b11110 @
1"
b10 2
1.
#40000
b0 1
0.
1&
b111100 $
b111100 6
b111100 >
b1110000100 %
b1110000100 7
b1110000100 =
#41000
b111100 <
b1110000100 :
0!
1*
0)
1-
b0 +
b0 0
b0 3
0"
b1 1
b0 2
1.
#42000
0.
#43000
bx <
b1101001000 :
0'
0*
x)
1-
b10 +
b10 0
b10 3
b1111110010111000 8
b1 2
0(
b111100 ;
b1101001000 5
b1110000100 #
b1110000100 4
b1110000100 ?
b1110000100 9
1.
#44000
0.
0&
#45000
b1111110011110100 8
b1100001100 :
b1100001100 5
b1101001000 #
b1101001000 4
b1101001000 ?
b1101001000 9
1.
#46000
0.
#47000
b1111110100110000 8
b1011010000 :
b1011010000 5
b1100001100 #
b1100001100 4
b1100001100 ?
b1100001100 9
1.
#48000
0.
#49000
b1111110101101100 8
b1010010100 :
b1010010100 5
b1011010000 #
b1011010000 4
b1011010000 ?
b1011010000 9
1.
#50000
0.
#51000
b1111110110101000 8
b1001011000 :
b1001011000 5
b1010010100 #
b1010010100 4
b1010010100 ?
b1010010100 9
1.
#52000
0.
#53000
b1111110111100100 8
b1000011100 :
b1000011100 5
b1001011000 #
b1001011000 4
b1001011000 ?
b1001011000 9
1.
#54000
0.
#55000
b1111111000100000 8
b111100000 :
b111100000 5
b1000011100 #
b1000011100 4
b1000011100 ?
b1000011100 9
1.
#56000
0.
#57000
b1111111001011100 8
b110100100 :
b110100100 5
b111100000 #
b111100000 4
b111100000 ?
b111100000 9
1.
#58000
0.
#59000
b1111111010011000 8
b101101000 :
b101101000 5
b110100100 #
b110100100 4
b110100100 ?
b110100100 9
1.
#60000
0.
#61000
b1111111011010100 8
b100101100 :
b100101100 5
b101101000 #
b101101000 4
b101101000 ?
b101101000 9
1.
#62000
0.
#63000
b1111111100010000 8
b11110000 :
b11110000 5
b100101100 #
b100101100 4
b100101100 ?
b100101100 9
1.
#64000
0.
#65000
b1111111101001100 8
b10110100 :
b10110100 5
b11110000 #
b11110000 4
b11110000 ?
b11110000 9
1.
#66000
0.
#67000
b1111111110001000 8
b1111000 :
b1111000 5
b10110100 #
b10110100 4
b10110100 ?
b10110100 9
1.
#68000
0.
#69000
b1111111111000100 8
b111100 :
b111100 5
b1111000 #
b1111000 4
b1111000 ?
b1111000 9
1.
#70000
0.
#71000
b0 8
b0 :
b0 5
b111100 #
b111100 4
b111100 ?
b111100 9
1.
#72000
0.
#73000
b0 <
1*
1)
0'
1-
b11 +
b11 0
b11 3
b111100 8
b111100 :
1,
b1111111111000100 5
b0 #
b0 4
b0 ?
b0 9
1.
#74000
0.
#75000
bx :
b10 1
bx <
1'
0*
x)
0-
bx +
bx 0
bx 3
b1111111111000100 8
1(
b0 ;
0,
b111100 5
b111100 #
b111100 4
b111100 ?
b111100 9
1.
#76000
b10 1
0.
1&
b1111000 $
b1111000 6
b1111000 >
b1000110010100 %
b1000110010100 7
b1000110010100 =
#77000
b0 1
1!
b111100 @
1"
b10 2
1.
#78000
0.
#79000
b1111000 <
b1000110010100 :
0!
1*
0)
1-
b0 +
b0 0
b0 3
0"
b1 1
b0 2
1.
#80000
b11110000 <
b101011111100100 :
0.
b11110000 $
b11110000 6
b11110000 >
b101011111100100 %
b101011111100100 7
b101011111100100 =
